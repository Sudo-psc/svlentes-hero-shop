/**
 * Pricing Plans Data
 *
 * Vers√£o: 1.0.0-fase3
 * Fase: MVP - Pricing (Centralized Config)
 *
 * NOTA: Este arquivo agora funciona como wrapper para o sistema centralizado.
 * Dados reais v√™m de src/config/base.yaml quando feature flag est√° ativa.
 */

import { PricingPlan } from '@/types'
import { config } from '@/config/loader'

/**
 * Get pricing plans from centralized config
 * Falls back to hardcoded data if feature flag is disabled
 */
function getPricingPlans(): PricingPlan[] {
  try {
    const appConfig = config.load()
    const useCentralizedPricing = config.isFeatureEnabled('useCentralizedPricing')

    if (useCentralizedPricing) {
      return appConfig.pricing.plans as PricingPlan[]
    }
  } catch (error) {
    console.warn('[Pricing] Error loading centralized config, using fallback data:', error)
  }

  // Fallback to hardcoded data
  return hardcodedPlans
}

// Hardcoded fallback data (sincronizado com base.yaml)
const hardcodedPlans: PricingPlan[] = [
    {
        id: 'basico',
        name: 'Plano Express Mensal',
        badge: 'Sem Fidelidade',
        priceMonthly: 128.00,
        priceAnnual: 1091.00,
        description: 'Plano b√°sico de lentes asf√©ricas mensais com entrega em casa. Sem fidelidade, cancele quando quiser.',
        features: [
            '1 par de lentes asf√©ricas mensais',
            'Entrega em casa',
            'Sem fidelidade - cancele quando quiser',
            'Acompanhamento via WhatsApp',
            'Troca gratuita em caso de defeito',
            'Atendimento em todo o Brasil'
        ],
        recommended: false,
        stripeProductId: 'prod_basic_svlentes',
        stripePriceId: 'price_basic_monthly',
        asaasProductId: 'prod_basico_svlentes',
        ctaText: 'Assinar Plano Express'
    },
    {
        id: 'padrao',
        name: 'Plano VIP Anual',
        badge: 'RECOMENDADO',
        popularBadge: 'Mais Popular - Economia de 29%',
        priceMonthly: 91.00,
        priceAnnual: 1091.00,
        description: 'Plano anual com m√°xima economia. 12 pares de lentes + acess√≥rios + frete gr√°tis. Economize R$ 445/ano!',
        features: [
            '12 pares de lentes asf√©ricas (1 ano completo)',
            '3 estojos protetores (R$ 60 em brindes)',
            '3 solu√ß√µes multiuso 300ml (R$ 90 em brindes)',
            'Frete gr√°tis (2 envios/ano)',
            'Desconto de 29% vs plano mensal',
            'Parcelamento: 12x de R$ 90,92 sem juros',
            'Suporte via WhatsApp 24/7',
            'Economia total: R$ 445 + R$ 150 em acess√≥rios'
        ],
        recommended: true,
        stripeProductId: 'prod_standard_svlentes',
        stripePriceId: 'price_standard_monthly',
        asaasProductId: 'prod_padrao_svlentes',
        ctaText: 'Assinar Plano VIP Anual'
    },
    {
        id: 'premium',
        name: 'Plano Sa√∫de Ocular Anual',
        badge: 'Premium com Telemedicina',
        priceMonthly: 138.00,
        priceAnnual: 1661.00,
        description: 'Acompanhamento preventivo completo com 4 consultas de telemedicina/ano. Ideal para grau inst√°vel, diab√©ticos e +50 anos.',
        features: [
            '‚úÖ 4 consultas por telemedicina/ano (1 por trimestre)',
            '12 pares de lentes asf√©ricas',
            '3 estojos protetores (R$ 60)',
            '3 solu√ß√µes multiuso 300ml (R$ 90)',
            'Frete gr√°tis (2 envios/ano)',
            'Ajustes de grau ilimitados',
            'Prioridade no atendimento',
            'Parcelamento: 12x de R$ 138,42 sem juros'
        ],
        recommended: false,
        stripeProductId: 'prod_premium_svlentes',
        stripePriceId: 'price_premium_monthly',
        asaasProductId: 'prod_premium_svlentes',
        ctaText: 'Assinar Plano Sa√∫de Ocular'
    }
]

// Export via fun√ß√£o para suportar centraliza√ß√£o
export const pricingPlans: PricingPlan[] = getPricingPlans()

// Compara√ß√£o de features entre planos
export const featureComparison = getFeatureComparison()

function getFeatureComparison() {
  try {
    const appConfig = config.load()
    const useCentralizedPricing = config.isFeatureEnabled('useCentralizedPricing')

    if (useCentralizedPricing) {
      return appConfig.pricing.featureComparison
    }
  } catch (error) {
    console.warn('[Pricing] Error loading feature comparison, using fallback:', error)
  }

  return hardcodedFeatureComparison
}

const hardcodedFeatureComparison = {
    features: [
        'Lentes de contato',
        'Frequ√™ncia de entrega',
        'Consultas m√©dicas',
        'Teleorienta√ß√£o',
        'Suporte',
        'Frete',
        'Seguro',
        'App m√≥vel',
        'Exames inclu√≠dos',
        'Atendimento domiciliar'
    ],
    planComparison: [
        {
            feature: 'Lentes de contato',
            basic: 'Mensais',
            premium: 'Di√°rias ou mensais',
            vip: 'Premium √∫ltima gera√ß√£o'
        },
        {
            feature: 'Frequ√™ncia de entrega',
            basic: 'A cada 3 meses',
            premium: 'Mensal',
            vip: 'Quinzenal se necess√°rio'
        },
        {
            feature: 'Consultas m√©dicas',
            basic: 'B√°sico',
            premium: 'Semestral inclu√≠da',
            vip: 'Trimestral inclu√≠da'
        },
        {
            feature: 'Teleorienta√ß√£o',
            basic: false,
            premium: 'Ilimitada',
            vip: 'Ilimitada + priorit√°ria'
        },
        {
            feature: 'Suporte',
            basic: 'WhatsApp',
            premium: '24/7 priorit√°rio',
            vip: 'Concierge dedicado'
        },
        {
            feature: 'Frete',
            basic: 'Gr√°tis',
            premium: 'Gr√°tis express',
            vip: 'Gr√°tis express + emergencial'
        },
        {
            feature: 'Seguro',
            basic: 'B√°sico',
            premium: 'Contra perda/dano',
            vip: 'Premium completo'
        },
        {
            feature: 'App m√≥vel',
            basic: false,
            premium: true,
            vip: true
        },
        {
            feature: 'Exames inclu√≠dos',
            basic: false,
            premium: false,
            vip: true
        },
        {
            feature: 'Atendimento domiciliar',
            basic: false,
            premium: false,
            vip: true
        }
    ]
}

// Benef√≠cios gerais do servi√ßo
export const serviceBenefits = getServiceBenefits()

function getServiceBenefits() {
  try {
    const appConfig = config.load()
    const useCentralizedPricing = config.isFeatureEnabled('useCentralizedPricing')

    if (useCentralizedPricing) {
      return appConfig.pricing.serviceBenefits
    }
  } catch (error) {
    console.warn('[Pricing] Error loading service benefits, using fallback:', error)
  }

  return hardcodedServiceBenefits
}

const hardcodedServiceBenefits = [
    {
        id: 'economy',
        title: 'Economia Garantida',
        description: 'Economia de at√© 40% comparado √† compra avulsa de lentes',
        icon: 'üí∞',
        highlight: true
    },
    {
        id: 'medical-care',
        title: 'Acompanhamento M√©dico',
        description: 'Acompanhamento m√©dico especializado inclu√≠do em todos os planos',
        icon: 'üë®‚Äç‚öïÔ∏è',
        highlight: true
    },
    {
        id: 'convenience',
        title: 'Entrega Regular',
        description: 'Entrega autom√°tica sem preocupa√ß√£o, sempre no prazo',
        icon: 'üì¶',
        highlight: true
    },
    {
        id: 'quality',
        title: 'Certifica√ß√£o ANVISA',
        description: 'Lentes premium certificadas pela ANVISA, garantia de qualidade',
        icon: '‚úÖ',
        highlight: false
    },
    {
        id: 'support',
        title: 'Suporte Completo',
        description: 'Suporte via WhatsApp e telemedicina sempre que precisar',
        icon: 'üí¨',
        highlight: false
    },
    {
        id: 'flexibility',
        title: 'Flexibilidade Total',
        description: 'Pause ou cancele sua assinatura a qualquer momento sem burocracia',
        icon: 'üîÑ',
        highlight: false
    }
]

// Informa√ß√µes de cobertura geogr√°fica
export const coverageInfo = getCoverageInfo()

function getCoverageInfo() {
  try {
    const appConfig = config.load()
    const useCentralizedPricing = config.isFeatureEnabled('useCentralizedPricing')

    if (useCentralizedPricing) {
      return appConfig.pricing.coverageInfo
    }
  } catch (error) {
    console.warn('[Pricing] Error loading coverage info, using fallback:', error)
  }

  return hardcodedCoverageInfo
}

const hardcodedCoverageInfo = [
    {
        id: 'presencial',
        icon: 'üìç',
        title: 'Consultas Presenciais',
        description: 'Dispon√≠veis em Caratinga, Ipatinga e Belo Horizonte/MG',
        locations: ['Caratinga/MG', 'Ipatinga/MG', 'Belo Horizonte/MG'],
        nationwide: false
    },
    {
        id: 'telemedicina',
        icon: 'üåê',
        title: 'Telemedicina',
        description: 'V√°lida em todo o territ√≥rio nacional',
        nationwide: true
    },
    {
        id: 'entrega',
        icon: 'üì¶',
        title: 'Entrega de Lentes',
        description: 'V√°lida em todo o territ√≥rio nacional via Correios',
        nationwide: true
    }
]

// FAQ espec√≠fica de planos
export const pricingFAQ = getPricingFAQ()

function getPricingFAQ() {
  try {
    const appConfig = config.load()
    const useCentralizedPricing = config.isFeatureEnabled('useCentralizedPricing')

    if (useCentralizedPricing) {
      return appConfig.pricing.faq
    }
  } catch (error) {
    console.warn('[Pricing] Error loading FAQ, using fallback:', error)
  }

  return hardcodedPricingFAQ
}

const hardcodedPricingFAQ = [
    {
        id: 'entrega',
        question: 'Como funciona a entrega?',
        answer: 'As lentes s√£o entregadas mensalmente no seu endere√ßo cadastrado, sem custo adicional de frete. Voc√™ recebe automaticamente antes de acabar suas lentes atuais, garantindo que nunca fique sem suas lentes de contato.'
    },
    {
        id: 'consultas',
        question: 'As consultas est√£o inclu√≠das?',
        answer: 'Sim! Todos os planos incluem consultas de acompanhamento com oftalmologista, tanto presenciais quanto por telemedicina, para garantir a sa√∫de dos seus olhos. A quantidade de consultas varia de acordo com o plano escolhido.'
    },
    {
        id: 'diferenca',
        question: 'Qual a diferen√ßa entre os planos?',
        answer: 'A principal diferen√ßa est√° na quantidade de lentes, frequ√™ncia de consultas e benef√≠cios adicionais. O Plano Padr√£o oferece mais consultas e telemedicina ilimitada. O Plano Premium inclui lentes multifocais, exames complementares e kit de higieniza√ß√£o.'
    },
    {
        id: 'cancelamento',
        question: 'Posso cancelar a assinatura?',
        answer: 'Sim, voc√™ pode pausar ou cancelar sua assinatura a qualquer momento, sem multas ou taxas de cancelamento. Basta entrar em contato atrav√©s do portal do cliente ou via WhatsApp.'
    },
    {
        id: 'pagamento',
        question: 'Como funciona o pagamento?',
        answer: 'Voc√™ pode pagar em at√© 12 vezes no cart√£o de cr√©dito ou √† vista com desconto via PIX ou boleto banc√°rio. O pagamento √© processado de forma segura atrav√©s da plataforma Asaas.'
    },
    {
        id: 'receita',
        question: 'Preciso de receita m√©dica?',
        answer: 'Sim, para sua seguran√ßa e sa√∫de ocular, √© necess√°rio ter uma receita m√©dica v√°lida. Se voc√™ ainda n√£o tem, podemos agendar uma consulta de avalia√ß√£o e adapta√ß√£o de lentes de contato.'
    },
    {
        id: 'qualidade',
        question: 'As lentes s√£o de qualidade?',
        answer: 'Sim! Trabalhamos apenas com lentes de contato de marcas reconhecidas e certificadas pela ANVISA. Todas as lentes s√£o embaladas individualmente e em ambiente est√©ril, garantindo m√°xima seguran√ßa e qualidade.'
    },
    {
        id: 'acompanhamento',
        question: 'Como funciona o acompanhamento m√©dico?',
        answer: 'Voc√™ ter√° acesso a consultas de acompanhamento com oftalmologista, tanto presenciais em nossas cl√≠nicas quanto por telemedicina. Al√©m disso, oferecemos suporte via WhatsApp para d√∫vidas sobre uso e cuidados com as lentes.'
    }
]

// Dados para calculadora de economia
export const economyCalculatorData = getEconomyCalculatorData()

function getEconomyCalculatorData() {
  try {
    const appConfig = config.load()
    const useCentralizedPricing = config.isFeatureEnabled('useCentralizedPricing')

    if (useCentralizedPricing) {
      return appConfig.pricing.economyCalculator
    }
  } catch (error) {
    console.warn('[Pricing] Error loading economy calculator, using fallback:', error)
  }

  return hardcodedEconomyCalculatorData
}

const hardcodedEconomyCalculatorData = {
    averagePrices: {
        daily: {
            avulso: 4.50, // por lente
            subscription: 2.70 // por lente na assinatura
        },
        weekly: {
            avulso: 12.00,
            subscription: 7.20
        },
        monthly: {
            avulso: 25.00,
            subscription: 15.00
        }
    },
    usagePatterns: {
        occasional: { daysPerMonth: 10, multiplier: 0.33 },
        regular: { daysPerMonth: 20, multiplier: 0.67 },
        daily: { daysPerMonth: 30, multiplier: 1.0 }
    }
}